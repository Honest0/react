/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule possibleStandardNames
 */

var possibleStandardNames = {
  // HTML
  acceptcharset: 'acceptCharset',
  'accept-charset': 'acceptCharset',
  accesskey: 'accessKey',
  allowfullscreen: 'allowFullScreen',
  allowtransparency: 'allowTransparency',
  autocapitalize: 'autoCapitalize',
  autocomplete: 'autoComplete',
  autocorrect: 'autoCorrect',
  autofocus: 'autoFocus',
  autoplay: 'autoPlay',
  autosave: 'autoSave',
  cellpadding: 'cellPadding',
  cellspacing: 'cellSpacing',
  charset: 'charSet',
  class: 'className',
  classid: 'classID',
  classname: 'className',
  children: 'children',
  colspan: 'colSpan',
  contenteditable: 'contentEditable',
  contextmenu: 'contextMenu',
  controlslist: 'controlsList',
  crossorigin: 'crossOrigin',
  dangerouslysetinnerhtml: 'dangerouslySetInnerHTML',
  datetime: 'dateTime',
  defaultvalue: 'defaultValue',
  defaultchecked: 'defaultChecked',
  enctype: 'encType',
  for: 'htmlFor',
  formMethod: 'formMethod',
  formaction: 'formAction',
  formenctype: 'formEncType',
  formnovalidate: 'formNoValidate',
  formtarget: 'formTarget',
  frameborder: 'frameBorder',
  hreflang: 'hrefLang',
  htmlfor: 'htmlFor',
  httpequiv: 'httpEquiv',
  'http-equiv': 'httpEquiv',
  innerhtml: 'innerHTML',
  inputmode: 'inputMode',
  itemid: 'itemID',
  itemprop: 'itemProp',
  itemref: 'itemRef',
  itemscope: 'itemScope',
  itemtype: 'itemType',
  keyparams: 'keyParams',
  keytype: 'keyType',
  marginWidth: 'marginWidth',
  marginheight: 'marginHeight',
  maxlength: 'maxLength',
  mediagroup: 'mediaGroup',
  minLength: 'minlength',
  novalidate: 'noValidate',
  playsinline: 'playsInline',
  radiogroup: 'radioGroup',
  readonly: 'readOnly',
  referrerpolicy: 'referrerPolicy',
  rowspan: 'rowSpan',
  spellcheck: 'spellCheck',
  srcdoc: 'srcDoc',
  srclang: 'srcLang',
  srcset: 'srcSet',
  tabindex: 'tabIndex',
  usemap: 'useMap',

  // SVG
  accentheight: 'accentHeight',
  'accent-height': 'accentHeight',
  alignmentbaseline: 'alignmentBaseline',
  'alignment-baseline': 'alignmentBaseline',
  allowreorder: 'allowReorder',
  'arabic-form': 'arabicForm',
  arabicform: 'arabicForm',
  attributename: 'attributeName',
  attributetype: 'attributeType',
  autoreverse: 'autoReverse',
  basefrequency: 'baseFrequency',
  baseprofile: 'baseProfile',
  'baseline-shift': 'baselineShift',
  baselineshift: 'baselineShift',
  calcmode: 'calcMode',
  'cap-height': 'capHeight',
  capheight: 'capHeight',
  'clip-path': 'clipPath',
  clippath: 'clipPath',
  'clip-rule': 'clipRule',
  cliprule: 'clipRule',
  clippathunits: 'clipPathUnits',
  'color-interpolation': 'colorInterpolation',
  colorinterpolation: 'colorInterpolation',
  'color-interpolation-filters': 'colorInterpolationFilters',
  colorinterpolationfilters: 'colorInterpolationFilters',
  'color-profile': 'colorProfile',
  colorprofile: 'colorProfile',
  'color-rendering': 'colorRendering',
  colorrendering: 'colorRendering',
  contentscripttype: 'contentScriptType',
  contentstyletype: 'contentStyleType',
  diffuseconstant: 'diffuseConstant',
  'dominant-baseline': 'dominantBaseline',
  dominantbaseline: 'dominantBaseline',
  edgemode: 'edgeMode',
  'enable-background': 'enableBackground',
  enablebackground: 'enableBackground',
  externalresourcesrequired: 'externalResourcesRequired',
  'fill-opacity': 'fillOpacity',
  fillopacity: 'fillOpacity',
  'fill-rule': 'fillRule',
  fillrule: 'fillRule',
  filterres: 'filterRes',
  filterunits: 'filterUnits',
  floodcolor: 'floodColor',
  'flood-color': 'floodColor',
  'flood-opacity': 'floodOpacity',
  floodOpacity: 'floodOpacity',
  'font-family': 'fontFamily',
  fontfamily: 'fontFamily',
  'font-size': 'fontSize',
  fontsize: 'fontSize',
  'font-size-adjust': 'fontSizeAdjust',
  fontsizeadjust: 'fontSizeAdjust',
  'font-stretch': 'fontStretch',
  fontstretch: 'fontStretch',
  'font-style': 'fontStyle',
  fontstyle: 'fontStyle',
  'font-variant': 'fontVariant',
  fontvariant: 'fontVariant',
  'font-weight': 'fontWeight',
  fontweight: 'fontWeight',
  'glyph-name': 'glyphName',
  glyphname: 'glyphName',
  'glyph-orientation-horizontal': 'glyphOrientationHorizontal',
  glyphorientationhorizontal: 'glyphOrientationHorizontal',
  'glyph-orientation-vertical': 'glyphOrientationVertical',
  glyphorientationvertical: 'glyphOrientationVertical',
  glyphref: 'glyphRef',
  gradienttransform: 'gradientTransform',
  gradientunits: 'gradientUnits',
  'horiz-adv-x': 'horizAdvX',
  horizadvx: 'horizAdvX',
  'horiz-origin-x': 'horizOriginX',
  horizoriginx: 'horizOriginX',
  'image-rendering': 'imageRendering',
  imagerendering: 'imageRendering',
  kernelmatrix: 'kernelMatrix',
  kernelunitlength: 'kernelUnitLength',
  keypoints: 'keyPoints',
  keysplines: 'keySplines',
  keytimes: 'keyTimes',
  lengthadjust: 'lengthAdjust',
  'letter-spacing': 'letterSpacing',
  letterspacing: 'letterSpacing',
  'lighting-color': 'lightingColor',
  lightingcolor: 'lightingColor',
  limitingconeangle: 'limitingConeAngle',
  'marker-end': 'markerEnd',
  markerend: 'markerEnd',
  'marker-mid': 'markerMid',
  markermid: 'markerMid',
  'marker-start': 'markerStart',
  markerstart: 'markerStart',
  markerheight: 'markerHeight',
  markerunits: 'markerUnits',
  markerwidth: 'markerWidth',
  maskcontentunits: 'maskContentUnits',
  maskunits: 'maskUnits',
  numoctaves: 'numOctaves',
  'overline-position': 'overlinePosition',
  overlineposition: 'overlinePosition',
  'overline-thickness': 'overlineThickness',
  overlinethickness: 'overlineThickness',
  'paint-order': 'paintOrder',
  paintorder: 'paintOrder',
  'panose-1': 'panose1',
  pathlength: 'pathLength',
  patterncontentunits: 'patternContentUnits',
  patterntransform: 'patternTransform',
  patternunits: 'patternUnits',
  'pointer-events': 'pointerEvents',
  pointerevents: 'pointerEvents',
  pointsatx: 'pointsAtX',
  pointsaty: 'pointsAtY',
  pointsatz: 'pointsAtZ',
  preservealpha: 'preserveAlpha',
  preserveaspectratio: 'preserveAspectRatio',
  primitiveunits: 'primitiveUnits',
  refx: 'refX',
  refy: 'refY',
  'rendering-intent': 'renderingIntent',
  renderingintent: 'renderingIntent',
  repeatcount: 'repeatCount',
  repeatdur: 'repeatDur',
  requiredextensions: 'requiredExtensions',
  requiredfeatures: 'requiredFeatures',
  'shape-rendering': 'shapeRendering',
  shaperendering: 'shapeRendering',
  specularconstant: 'specularConstant',
  specularexponent: 'specularExponent',
  spreadmethod: 'spreadMethod',
  startoffset: 'startOffset',
  stddeviation: 'stdDeviation',
  stitchtiles: 'stitchTiles',
  'stop-color': 'stopColor',
  stopcolor: 'stopColor',
  stopopacity: 'stopOpacity',
  'stop-opacity': 'stopOpacity',
  'strikethrough-position': 'strikethroughPosition',
  strikethroughposition: 'strikethroughPosition',
  strikethroughthickness: 'strikethroughThickness',
  'strikethrough-thickness': 'strikethroughThickness',
  'stroke-dasharray': 'strokeDasharray',
  strokedasharray: 'strokeDasharray',
  'stroke-dashoffset': 'strokeDashoffset',
  strokedashoffset: 'strokeDashoffset',
  'stroke-linecap': 'strokeLinecap',
  strokelinecap: 'strokeLinecap',
  'stroke-linejoin': 'strokeLinejoin',
  strokelinejoin: 'strokeLinejoin',
  'stroke-miterlimit': 'strokeMiterlimit',
  strokemiterlimit: 'strokeMiterlimit',
  'stroke-opacity': 'strokeOpacity',
  strokeopacity: 'strokeOpacity',
  'stroke-width': 'strokeWidth',
  suppresscontenteditablewarning: 'suppressContentEditableWarning',
  surfacescale: 'surfaceScale',
  systemlanguage: 'systemLanguage',
  tablevalues: 'tableValues',
  targetx: 'targetX',
  targety: 'targetY',
  'text-anchor': 'textAnchor',
  textanchor: 'textAnchor',
  'text-decoration': 'textDecoration',
  textdecoration: 'textDecoration',
  'text-rendering': 'textRendering',
  textrendering: 'textRendering',
  textlength: 'textLength',
  'underline-position': 'underlinePosition',
  underlineposition: 'underlinePosition',
  'underline-thickness': 'underlineThickness',
  underlinethickness: 'underlineThickness',
  'unicode-bidi': 'unicodeBidi',
  unicodebidi: 'unicodeBidi',
  'unicode-range': 'unicodeRange',
  unicoderange: 'unicodeRange',
  'units-per-em': 'unitsPerEm',
  unitsperem: 'unitsPerEm',
  'v-alphabetic': 'vAlphabetic',
  valphabetic: 'vAlphabetic',
  'v-hanging': 'vHanging',
  vhanging: 'vHanging',
  'v-ideographic': 'vIdeographic',
  videographic: 'vIdeographic',
  'v-mathematical': 'vMathematical',
  vmathematical: 'vMathematical',
  'vector-effect': 'vectorEffect',
  vectoreffect: 'vectorEffect',
  'vert-adv-y': 'vertAdvY',
  vertadvy: 'vertAdvY',
  'vert-origin-x': 'vertOriginX',
  vertoriginx: 'vertOriginX',
  'vert-origin-y': 'vertOriginY',
  vertoriginy: 'vertOriginY',
  viewbox: 'viewBox',
  viewtarget: 'viewTarget',
  'word-spacing': 'wordSpacing',
  wordspacing: 'wordSpacing',
  'writing-mode': 'writingMode',
  writingmode: 'writingMode',
  'x-height': 'xHeight',
  xheight: 'xHeight',
  xchannelselector: 'xChannelSelector',
  'xlink:actuate': 'xlinkActuate',
  xlinkactuate: 'xlinkActuate',
  'xlink:arcrole': 'xlinkArcrole',
  xlinkarcrole: 'xlinkArcrole',
  'xlink:href': 'xlinkHref',
  xlinkhref: 'xlinkHref',
  'xlink:role': 'xlinkRole',
  xlinkrole: 'xlinkRole',
  'xlink:show': 'xlinkShow',
  xlinkshow: 'xlinkShow',
  'xlink:title': 'xlinkTitle',
  xlinktitle: 'xlinkTitle',
  'xlink:type': 'xlinkType',
  xlinktype: 'xlinkType',
  'xml:base': 'xmlBase',
  xmlbase: 'xmlBase',
  'xmlns:xlink': 'xmlnsXlink',
  xmlnsxlink: 'xmlnsXlink',
  'xml:lang': 'xmlLang',
  xmllang: 'xmlLang',
  'xml:space': 'xmlSpace',
  xmlspace: 'xmlSpace',
  ychannelselector: 'yChannelSelector',
  zoomandpan: 'zoomAndPan',
};

module.exports = possibleStandardNames;
